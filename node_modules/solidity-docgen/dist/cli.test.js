"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const fs_1 = require("fs");
const child_process_1 = __importDefault(require("child_process"));
const events_1 = __importDefault(require("events"));
ava_1.default('fixture 001', async (t) => {
    await cleanFixtureOutput('001');
    const child = child_process_1.default.fork(require.resolve('./cli'), [
        '--input', 'fixtures/001/input',
        '--output', 'fixtures/001/output',
        '--output-structure', 'single',
    ]);
    await events_1.default.once(child, 'exit');
    const output = await fs_1.promises.readFile('fixtures/001/output/index.md', 'utf8');
    t.snapshot(output);
});
ava_1.default('fixture 002', async (t) => {
    await cleanFixtureOutput('002');
    const child = child_process_1.default.fork(require.resolve('./cli'), [
        '--input', 'fixtures/002/input',
        '--output', 'fixtures/002/output',
        '--helpers', 'fixtures/002/helpers.js',
        '--templates', 'fixtures/002/templates',
        '--output-structure', 'single',
    ]);
    await events_1.default.once(child, 'exit');
    const output = await fs_1.promises.readFile('fixtures/002/output/index.md', 'utf8');
    t.snapshot(output);
});
async function cleanFixtureOutput(num) {
    const outputPath = `fixtures/${num}/output`;
    try {
        await fs_1.promises.access(outputPath);
    }
    catch (e) {
        return;
    }
    for (const e of await fs_1.promises.readdir(`fixtures/${num}/output`)) {
        await fs_1.promises.unlink(`fixtures/${num}/output/${e}`);
    }
    await fs_1.promises.rmdir(`fixtures/${num}/output`);
}
//# sourceMappingURL=cli.test.js.map